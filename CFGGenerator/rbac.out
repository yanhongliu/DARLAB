1 1 1 None
1001 878 878 538
2001 697 1091 565
3001 1413 1413 245
4001 1475 1537 247
class MultiMap:
    def __init__(self):
        self.dct = {}  
        
    def get(self, k):
        temp0 = self.dct 
        temp4 = k in temp0 
        if temp4:
            temp1 = self.dct 
            temp2 = temp1[k] 
            return temp2
        else:
            temp3 = set() 
            return temp3
        
    def __getitem__(self, k):
        temp5 = self.get 
        temp6 = temp5(k) 
        return temp6
    def add(self, k, v):
        temp7 = self.dct 
        temp12 = k not in temp7 
        if temp12:
            s = set() 
            self.dct[k] = s 
            temp8 = s.add 
            temp8(v)
            
        else:
            temp9 = self.dct 
            temp10 = temp9[k] 
            temp11 = temp10.add 
            temp11(v)
            
        
    def remove(self, k, v):
        temp13 = self.dct 
        temp18 = k in temp13 
        if temp18:
            temp14 = self.dct 
            s = temp14[k] 
            temp15 = s.remove 
            temp15(v)
            temp17 =  not s 
            if temp17:
                temp16 = self.dct 
                del temp16[k]
                
            
        
    
class coreRBAC:
    def __init__(self):
        self.OBJS = set() 
        self.OPS = set() 
        self.USERS = set() 
        self.ROLES = set() 
        self.PR = set() 
        self.UR = set() 
        self.SESSIONS = set() 
        self.SU = set() 
        self.SR = set() 
        self.SsdNAMES = set() 
        self.SsdNR = set() 
        self.SsdNC = set() 
        self.DsdNAMES = set() 
        self.DsdNR = set() 
        self.DsdNC = set() 
        
    def __init__(self):
        self.OBJS = set() 
        self.OPS = set() 
        self.USERS = set() 
        self.ROLES = set() 
        self.PR = set() 
        self.UR = set() 
        self.SESSIONS = set() 
        self.SU = set() 
        self.SR = set() 
        self.SsdNAMES = set() 
        self.SsdNR = set() 
        self.SsdNC = set() 
        self.DsdNAMES = set() 
        self.DsdNR = set() 
        self.DsdNC = set() 
        
    def AddUser(self, user):
        temp19 = self.USERS 
        assert user not in temp19
        temp20 = self.USERS 
        temp21 = temp20.add 
        temp21(user)
        
    def AddUser(self, user):
        temp19 = self.USERS 
        assert user not in temp19
        temp20 = self.USERS 
        temp21 = temp20.add 
        temp21(user)
        
    def DeleteUser(self, user):
        temp22 = self.USERS 
        assert user in temp22
        temp23 = [] 
        temp25 = self.ROLES 
        for r in temp25:
            temp24 = (user,r) 
            temp24.append(temp24)
            
        temp26 = temp24 
        self.UR -= set(temp26)
        temp27 = [] 
        temp30 = self.SESSIONS 
        for s in temp30:
            temp28 = (s,user) 
            temp29 = self.SU 
            if temp28 in temp29:
                temp27.append(s)
                
            
        temp31 = temp27 
        temp33 = set(temp31) 
        for s in temp33:
            temp32 = self.DeleteSession 
            temp32(user, s)
            
        temp34 = self.USERS 
        temp35 = temp34.remove 
        temp35(user)
        
    def AddRole(self, role):
        temp36 = self.ROLES 
        assert role not in temp36
        temp37 = self.ROLES 
        temp38 = temp37.add 
        temp38(role)
        
    def AddRole(self, role):
        temp36 = self.ROLES 
        assert role not in temp36
        temp37 = self.ROLES 
        temp38 = temp37.add 
        temp38(role)
        
    def DeleteRole(self, role):
        temp39 = self.ROLES 
        assert role in temp39
        temp40 = self.ROLES 
        temp41 = temp40.remove 
        temp41(role)
        temp42 = [] 
        temp46 = self.OPS 
        for op in temp46:
            temp45 = self.OBJS 
            for obj in temp45:
                temp43 = (op,obj) 
                temp44 = (temp43,role) 
                temp44.append(temp44)
                
            
        temp47 = temp44 
        self.PR -= set(temp47)
        temp48 = [] 
        temp50 = self.USERS 
        for u in temp50:
            temp49 = (u,role) 
            temp49.append(temp49)
            
        temp51 = temp49 
        self.UR -= set(temp51)
        temp52 = [] 
        temp61 = self.SESSIONS 
        for s in temp61:
            temp60 = self.USERS 
            for u in temp60:
                temp54 = (s,u) 
                temp55 = self.SU 
                temp56 = temp54 in temp55 
                temp57 = (s,role) 
                temp58 = self.SR 
                temp59 = temp57 in temp58 
                if temp56 and temp59:
                    temp53 = (s,u) 
                    temp53.append(temp53)
                    
                
            
        temp62 = temp53 
        temp64 = set(temp62) 
        for (s,u,) in temp64:
            temp63 = self.DeleteSession 
            temp63(u, s)
            
        
    def DeassignUser(self, user, role):
        temp65 = self.USERS 
        assert user in temp65
        temp66 = self.ROLES 
        assert role in temp66
        temp67 = (user,role) 
        temp68 = self.UR 
        assert temp67 in temp68
        temp69 = self.UR 
        temp70 = temp69.remove 
        temp71 = (user,role) 
        temp70(temp71)
        temp72 = [] 
        temp79 = self.SESSIONS 
        for s in temp79:
            temp73 = (s,user) 
            temp74 = self.SU 
            temp75 = temp73 in temp74 
            temp76 = (s,role) 
            temp77 = self.SR 
            temp78 = temp76 in temp77 
            if temp75 and temp78:
                temp72.append(s)
                
            
        temp80 = temp72 
        temp82 = set(temp80) 
        for s in temp82:
            temp81 = self.DeleteSession 
            temp81(user, s)
            
        
    def GrantPermission(self, operation, object, role):
        temp83 = self.OPS 
        temp84 = operation in temp83 
        temp85 = self.OBJS 
        temp86 = object in temp85 
        assert temp84 and temp86
        temp87 = self.ROLES 
        assert role in temp87
        temp88 = (operation,object) 
        temp89 = (temp88,role) 
        temp90 = self.PR 
        assert temp89 not in temp90
        temp91 = self.PR 
        temp92 = temp91.add 
        temp93 = (operation,object) 
        temp94 = (temp93,role) 
        temp92(temp94)
        
    def GrantPermission(self, operation, object, role):
        temp83 = self.OPS 
        temp84 = operation in temp83 
        temp85 = self.OBJS 
        temp86 = object in temp85 
        assert temp84 and temp86
        temp87 = self.ROLES 
        assert role in temp87
        temp88 = (operation,object) 
        temp89 = (temp88,role) 
        temp90 = self.PR 
        assert temp89 not in temp90
        temp91 = self.PR 
        temp92 = temp91.add 
        temp93 = (operation,object) 
        temp94 = (temp93,role) 
        temp92(temp94)
        
    def RevokePermission(self, operation, object, role):
        temp95 = self.OPS 
        temp96 = operation in temp95 
        temp97 = self.OBJS 
        temp98 = object in temp97 
        assert temp96 and temp98
        temp99 = self.ROLES 
        assert role in temp99
        temp100 = (operation,object) 
        temp101 = (temp100,role) 
        temp102 = self.PR 
        assert temp101 in temp102
        temp103 = self.PR 
        temp104 = temp103.remove 
        temp105 = (operation,object) 
        temp106 = (temp105,role) 
        temp104(temp106)
        
    def CreateSession(self, user, session, ars):
        added = set() 
        for role in ars:
            temp107 = (session,role) 
            temp108 = self.SR 
            temp114 = temp107 not in temp108 
            if temp114:
                temp109 = self.SR 
                temp110 = temp109.add 
                temp111 = (session,role) 
                temp110(temp111)
                temp112 = added.add 
                temp113 = (session,role) 
                temp112(temp113)
                
            
        temp115 = self.checkDSD 
        good = temp115() 
        for k in added:
            temp116 = self.SR 
            temp117 = temp116.remove 
            temp118 = (k[0],k[1]) 
            temp117(temp118)
            
        assert good
        temp119 = self.USERS 
        assert user in temp119
        temp120 = self.SESSIONS 
        assert session not in temp120
        temp121 = ars.issubset 
        temp122 = self.AssignedRoles 
        temp123 = temp122(user) 
        assert temp121(temp123)
        temp124 = self.SU 
        temp125 = temp124.add 
        temp126 = (session,user) 
        temp125(temp126)
        for r in ars:
            temp127 = self.SR 
            temp128 = temp127.add 
            temp129 = (session,r) 
            temp128(temp129)
            
        temp130 = self.SESSIONS 
        temp131 = temp130.add 
        temp131(session)
        
    def CreateSession(self, user, session, ars):
        added = set() 
        for role in ars:
            temp107 = (session,role) 
            temp108 = self.SR 
            temp114 = temp107 not in temp108 
            if temp114:
                temp109 = self.SR 
                temp110 = temp109.add 
                temp111 = (session,role) 
                temp110(temp111)
                temp112 = added.add 
                temp113 = (session,role) 
                temp112(temp113)
                
            
        temp115 = self.checkDSD 
        good = temp115() 
        for k in added:
            temp116 = self.SR 
            temp117 = temp116.remove 
            temp118 = (k[0],k[1]) 
            temp117(temp118)
            
        assert good
        temp119 = self.USERS 
        assert user in temp119
        temp120 = self.SESSIONS 
        assert session not in temp120
        temp121 = ars.issubset 
        temp122 = self.AssignedRoles 
        temp123 = temp122(user) 
        assert temp121(temp123)
        temp124 = self.SU 
        temp125 = temp124.add 
        temp126 = (session,user) 
        temp125(temp126)
        for r in ars:
            temp127 = self.SR 
            temp128 = temp127.add 
            temp129 = (session,r) 
            temp128(temp129)
            
        temp130 = self.SESSIONS 
        temp131 = temp130.add 
        temp131(session)
        
    def AddActiveRole(self, user, session, role):
        added = set() 
        temp132 = (session,role) 
        temp133 = self.SR 
        temp139 = temp132 not in temp133 
        if temp139:
            temp134 = self.SR 
            temp135 = temp134.add 
            temp136 = (session,role) 
            temp135(temp136)
            temp137 = added.add 
            temp138 = (session,role) 
            temp137(temp138)
            
        temp140 = self.CheckDSD 
        good = temp140() 
        for k in added:
            temp141 = self.SR 
            temp142 = temp141.remove 
            temp143 = (k[0],k[1]) 
            temp142(temp143)
            
        assert good
        temp144 = self.USERS 
        assert user in temp144
        temp145 = self.SESSIONS 
        assert session in temp145
        temp146 = self.ROLES 
        assert role in temp146
        temp147 = (session,user) 
        temp148 = self.SU 
        assert temp147 in temp148
        temp149 = (session,role) 
        temp150 = self.SR 
        assert temp149 not in temp150
        temp151 = self.AssignedRoles 
        temp152 = temp151(user) 
        assert role in temp152
        temp153 = self.SR 
        temp154 = temp153.add 
        temp155 = (session,role) 
        temp154(temp155)
        
    def DeleteSession(self, user, session):
        temp156 = self.USERS 
        assert user in temp156
        temp157 = self.SESSIONS 
        assert session in temp157
        temp158 = (session,user) 
        temp159 = self.SU 
        assert temp158 in temp159
        temp160 = self.SU 
        temp161 = temp160.remove 
        temp162 = (session,user) 
        temp161(temp162)
        temp163 = [] 
        temp165 = self.ROLES 
        for r in temp165:
            temp164 = (session,r) 
            temp164.append(temp164)
            
        temp166 = temp164 
        self.SR -= set(temp166)
        temp167 = self.SESSIONS 
        temp168 = temp167.remove 
        temp168(session)
        
    def DropActiveRole(self, user, session, role):
        temp169 = self.USERS 
        assert user in temp169
        temp170 = self.SESSIONS 
        assert session in temp170
        temp171 = self.ROLES 
        assert role in temp171
        temp172 = (session,user) 
        temp173 = self.SU 
        assert temp172 in temp173
        temp174 = (session,role) 
        temp175 = self.SR 
        assert temp174 in temp175
        temp176 = self.SR 
        temp177 = temp176.remove 
        temp178 = (session,role) 
        temp177(temp178)
        
    def CheckAccess(self, session, operation, object):
        temp179 = self.SESSIONS 
        assert session in temp179
        temp180 = self.OPS 
        assert operation in temp180
        temp181 = self.OBJS 
        assert object in temp181
        temp182 = [] 
        temp190 = self.ROLES 
        for r in temp190:
            temp183 = (session,r) 
            temp184 = self.SR 
            temp185 = temp183 in temp184 
            temp186 = (operation,object) 
            temp187 = (temp186,r) 
            temp188 = self.PR 
            temp189 = temp187 in temp188 
            if temp185 and temp189:
                temp182.append(r)
                
            
        temp191 = temp182 
        temp192 = set(temp191) 
        return temp192
    def CheckAccess(self, session, operation, object):
        temp179 = self.SESSIONS 
        assert session in temp179
        temp180 = self.OPS 
        assert operation in temp180
        temp181 = self.OBJS 
        assert object in temp181
        temp182 = [] 
        temp190 = self.ROLES 
        for r in temp190:
            temp183 = (session,r) 
            temp184 = self.SR 
            temp185 = temp183 in temp184 
            temp186 = (operation,object) 
            temp187 = (temp186,r) 
            temp188 = self.PR 
            temp189 = temp187 in temp188 
            if temp185 and temp189:
                temp182.append(r)
                
            
        temp191 = temp182 
        temp192 = set(temp191) 
        return temp192
    def AssignedUsers(self, role):
        temp193 = self.ROLES 
        assert role in temp193
        temp194 = [] 
        temp197 = self.USERS 
        for u in temp197:
            temp195 = (u,role) 
            temp196 = self.UR 
            if temp195 in temp196:
                temp194.append(u)
                
            
        temp198 = temp194 
        temp199 = set(temp198) 
        return temp199
    def AssignedRoles(self, user):
        temp200 = self.USERS 
        assert user in temp200
        temp201 = [] 
        temp204 = self.ROLES 
        for r in temp204:
            temp202 = (user,r) 
            temp203 = self.UR 
            if temp202 in temp203:
                temp201.append(r)
                
            
        temp205 = temp201 
        temp206 = set(temp205) 
        return temp206
    def AssignedRoles(self, user):
        temp200 = self.USERS 
        assert user in temp200
        temp201 = [] 
        temp204 = self.ROLES 
        for r in temp204:
            temp202 = (user,r) 
            temp203 = self.UR 
            if temp202 in temp203:
                temp201.append(r)
                
            
        temp205 = temp201 
        temp206 = set(temp205) 
        return temp206
    def RolePermissions(self, role):
        temp207 = self.ROLES 
        assert role in temp207
        temp208 = [] 
        temp214 = self.OPS 
        for op in temp214:
            temp213 = self.OBJS 
            for obj in temp213:
                temp210 = (op,obj) 
                temp211 = (temp210,role) 
                temp212 = self.PR 
                if temp211 in temp212:
                    temp209 = (op,obj) 
                    temp209.append(temp209)
                    
                
            
        temp215 = temp209 
        temp216 = set(temp215) 
        return temp216
    def UserPermissions(self, user):
        temp217 = self.USERS 
        assert user in temp217
        temp218 = [] 
        temp229 = self.ROLES 
        for r in temp229:
            temp228 = self.OPS 
            for op in temp228:
                temp227 = self.OBJS 
                for obj in temp227:
                    temp220 = (user,r) 
                    temp221 = self.UR 
                    temp222 = temp220 in temp221 
                    temp223 = (op,obj) 
                    temp224 = (temp223,r) 
                    temp225 = self.PR 
                    temp226 = temp224 in temp225 
                    if temp222 and temp226:
                        temp219 = (op,obj) 
                        temp219.append(temp219)
                        
                    
                
            
        temp230 = temp219 
        temp231 = set(temp230) 
        return temp231
    def SessionRoles(self, session):
        temp232 = self.SESSIONS 
        assert session in temp232
        temp233 = [] 
        temp236 = self.ROLES 
        for r in temp236:
            temp234 = (session,r) 
            temp235 = self.SR 
            if temp234 in temp235:
                temp233.append(r)
                
            
        temp237 = temp233 
        temp238 = set(temp237) 
        return temp238
    def SessionPermissions(self, session):
        temp239 = self.SESSIONS 
        assert session in temp239
        temp240 = [] 
        temp251 = self.ROLES 
        for r in temp251:
            temp250 = self.OPS 
            for op in temp250:
                temp249 = self.OBJS 
                for obj in temp249:
                    temp242 = (session,r) 
                    temp243 = self.SR 
                    temp244 = temp242 in temp243 
                    temp245 = (op,obj) 
                    temp246 = (temp245,r) 
                    temp247 = self.PR 
                    temp248 = temp246 in temp247 
                    if temp244 and temp248:
                        temp241 = (op,obj) 
                        temp241.append(temp241)
                        
                    
                
            
        temp252 = temp241 
        temp253 = set(temp252) 
        return temp253
    def RoleOperationsOnObject(self, role, obj):
        temp254 = self.ROLES 
        assert role in temp254
        temp255 = self.OBJS 
        assert obj in temp255
        temp256 = [] 
        temp260 = self.OPS 
        for op in temp260:
            temp257 = (op,obj) 
            temp258 = (temp257,role) 
            temp259 = self.PR 
            if temp258 in temp259:
                temp256.append(op)
                
            
        temp261 = temp256 
        temp262 = set(temp261) 
        return temp262
    def UserOperationsOnObject(self, user, obj):
        temp263 = self.USERS 
        assert user in temp263
        temp264 = self.OBJS 
        assert obj in temp264
        temp265 = [] 
        temp274 = self.OPS 
        for op in temp274:
            temp273 = self.ROLES 
            for r in temp273:
                temp266 = (user,r) 
                temp267 = self.UR 
                temp268 = temp266 in temp267 
                temp269 = (op,obj) 
                temp270 = (temp269,r) 
                temp271 = self.PR 
                temp272 = temp270 in temp271 
                if temp268 and temp272:
                    temp265.append(op)
                    
                
            
        temp275 = temp265 
        temp276 = set(temp275) 
        return temp276
    def AddOperation(self, operation):
        temp277 = self.OPS 
        temp278 = temp277.add 
        temp278(operation)
        
    def AddOperation(self, operation):
        temp277 = self.OPS 
        temp278 = temp277.add 
        temp278(operation)
        
    def AddObject(self, OBJ):
        temp279 = self.OBJS 
        temp280 = temp279.add 
        temp280(OBJ)
        
    def AddObject(self, OBJ):
        temp279 = self.OBJS 
        temp280 = temp279.add 
        temp280(OBJ)
        
    def AddPermission(self, operation, obj):
        pass 
    def checkSSD(self):
        temp281 = [] 
        temp294 = self.USERS 
        for u in temp294:
            temp293 = self.SsdNC 
            for (name,c,) in temp293:
                temp282 = [] 
                temp285 = [] 
                temp288 = self.ROLES 
                for r in temp288:
                    temp286 = (u,r) 
                    temp287 = self.UR 
                    if temp286 in temp287:
                        temp285.append(r)
                        
                    
                temp289 = temp285 
                for r in set(temp289):
                    temp283 = (name,r) 
                    temp284 = self.SsdNR 
                    if temp283 in temp284:
                        temp282.append(r)
                        
                    
                temp290 = temp282 
                temp291 = set(temp290) 
                temp292 = len(temp291) 
                if temp292 > c:
                    temp281.append(u)
                    
                
            
        temp295 = temp281 
        temp296 = set(temp295) 
        temp297 =  not temp296 
        return temp297
    def checkSSD(self):
        temp281 = [] 
        temp294 = self.USERS 
        for u in temp294:
            temp293 = self.SsdNC 
            for (name,c,) in temp293:
                temp282 = [] 
                temp285 = [] 
                temp288 = self.ROLES 
                for r in temp288:
                    temp286 = (u,r) 
                    temp287 = self.UR 
                    if temp286 in temp287:
                        temp285.append(r)
                        
                    
                temp289 = temp285 
                for r in set(temp289):
                    temp283 = (name,r) 
                    temp284 = self.SsdNR 
                    if temp283 in temp284:
                        temp282.append(r)
                        
                    
                temp290 = temp282 
                temp291 = set(temp290) 
                temp292 = len(temp291) 
                if temp292 > c:
                    temp281.append(u)
                    
                
            
        temp295 = temp281 
        temp296 = set(temp295) 
        temp297 =  not temp296 
        return temp297
    def AssignUser(self, user, role):
        temp298 = self.USERS 
        assert user in temp298
        temp299 = self.ROLES 
        assert role in temp299
        temp300 = (user,role) 
        temp301 = self.UR 
        assert temp300 not in temp301
        temp302 = self.UR 
        temp303 = temp302.add 
        temp304 = (user,role) 
        temp303(temp304)
        temp305 = self.checkSSD 
        temp305()
        
    def AssignUser(self, user, role):
        temp298 = self.USERS 
        assert user in temp298
        temp299 = self.ROLES 
        assert role in temp299
        temp300 = (user,role) 
        temp301 = self.UR 
        assert temp300 not in temp301
        temp302 = self.UR 
        temp303 = temp302.add 
        temp304 = (user,role) 
        temp303(temp304)
        temp305 = self.checkSSD 
        temp305()
        
    def CreateSsdSet(self, name, roles, c):
        temp306 = self.SsdNAMES 
        assert name not in temp306
        temp307 = roles.issubset 
        temp308 = self.ROLES 
        assert temp307(temp308)
        assert 1 <= c <= len(roles) - 1
        AddedSsdNR = set() 
        for r in roles:
            temp309 = (name,r) 
            temp310 = self.SsdNR 
            temp316 = temp309 not in temp310 
            if temp316:
                temp311 = AddedSsdNR.add 
                temp312 = (name,r) 
                temp311(temp312)
                temp313 = self.SsdNR 
                temp314 = temp313.add 
                temp315 = (name,r) 
                temp314(temp315)
                
            
        AddedSsdNC = set() 
        temp317 = (name,c) 
        temp318 = self.SsdNC 
        temp324 = temp317 not in temp318 
        if temp324:
            temp319 = AddedSsdNC.add 
            temp320 = (name,c) 
            temp319(temp320)
            temp321 = self.SsdNC 
            temp322 = temp321.add 
            temp323 = (name,c) 
            temp322(temp323)
            
        temp325 = self.checkSSD 
        assert temp325()
        for (name,r,) in AddedSsdNR:
            temp326 = self.SsdNR 
            temp327 = temp326.remove 
            temp328 = (name,r) 
            temp327(temp328)
            
        for (name,c,) in AddedSsdNC:
            temp329 = self.SsdNC 
            temp330 = temp329.remove 
            temp331 = (name,c) 
            temp330(temp331)
            
        temp332 = self.SsdNAMES 
        temp333 = temp332.add 
        temp333(name)
        temp334 = [] 
        for r in roles:
            temp335 = (name,r) 
            temp335.append(temp335)
            
        temp336 = temp335 
        self.SsdNR |= set(temp336)
        temp337 = self.SsdNC 
        temp338 = temp337.add 
        temp339 = (name,c) 
        temp338(temp339)
        
    def DeleteSsdSet(self, name):
        temp340 = self.SsdNAMES 
        assert name in temp340
        temp341 = [] 
        temp343 = self.SsdRoleSetRoles 
        for r in temp343(name):
            temp342 = (name,r) 
            temp342.append(temp342)
            
        temp344 = temp342 
        self.SsdNR -= set(temp344)
        temp345 = self.SsdNC 
        temp346 = temp345.remove 
        temp347 = self.SsdRoleSetCardinality 
        temp348 = temp347(name) 
        temp349 = (name,temp348) 
        temp346(temp349)
        temp350 = self.SsdNAMES 
        temp351 = temp350.remove 
        temp351(name)
        
    def AddSsdRoleMember(self, name, role):
        temp352 = self.SsdNAMES 
        assert name in temp352
        temp353 = self.ROLES 
        assert role in temp353
        temp354 = self.SsdRoleSetRoles 
        temp355 = temp354(name) 
        assert role not in temp355
        AddedSsdNR = set() 
        temp356 = (name,role) 
        temp357 = self.SsdNR 
        temp363 = temp356 not in temp357 
        if temp363:
            temp358 = AddedSsdNR.add 
            temp359 = (name,role) 
            temp358(temp359)
            temp360 = self.SsdNR 
            temp361 = temp360.add 
            temp362 = (name,role) 
            temp361(temp362)
            
        temp364 = self.checkSSD 
        assert temp364()
        for (name,r,) in AddedSsdNR:
            temp365 = self.SsdNR 
            temp366 = temp365.remove 
            temp367 = (name,r) 
            temp366(temp367)
            
        temp368 = self.SsdNR 
        temp369 = temp368.add 
        temp370 = (name,role) 
        temp369(temp370)
        
    def DeleteSsdRoleMember(self, name, role):
        temp371 = self.SsdNAMES 
        assert name in temp371
        temp372 = self.SsdRoleSetRoles 
        temp373 = temp372(name) 
        assert role in temp373
        temp374 = self.SsdRoleSetCardinality 
        temp378 = temp374(name) 
        temp376 = self.SsdRoleSetRoles 
        temp377 = temp376(name) 
        temp375 = len(temp377) 
        temp379 = temp375 - 2 
        assert temp378 <= temp379
        temp380 = self.SsdNR 
        temp381 = temp380.remove 
        temp382 = (name,role) 
        temp381(temp382)
        
    def SetSsdSetCardinality(self, name, c):
        temp383 = self.SsdNAMES 
        assert name in temp383
        assert 1 <= c <= len(self.SsdRoleSetRoles(name)) - 1
        NegSsdNC = set() 
        temp384 = self.SsdRoleSetCardinality 
        temp385 = temp384(name) 
        temp386 = (name,temp385) 
        temp395 = set(temp386) 
        for (name,c,) in temp395:
            temp387 = (name,c) 
            temp388 = self.SsdNC 
            temp394 = temp387 in temp388 
            if temp394:
                temp389 = self.SsdNC 
                temp390 = temp389.remove 
                temp391 = (name,c) 
                temp390(temp391)
                temp392 = NegSsdNC.add 
                temp393 = (name,c) 
                temp392(temp393)
                
            
        PosSsdNC = set() 
        temp396 = (name,c) 
        temp397 = self.SsdNC 
        temp403 = temp396 not in temp397 
        if temp403:
            temp398 = self.SsdNC 
            temp399 = temp398.add 
            temp400 = (name,c) 
            temp399(temp400)
            temp401 = PosSsdNC.add 
            temp402 = (name,c) 
            temp401(temp402)
            
        temp404 = self.checkSSD 
        assert temp404()
        for (name,c,) in PosSsdNC:
            temp405 = self.SsdNC 
            temp406 = temp405.remove 
            temp407 = (name,c) 
            temp406(temp407)
            
        for (name,c,) in NegSsdNC:
            temp408 = self.SsdNC 
            temp409 = temp408.add 
            temp410 = (name,c) 
            temp409(temp410)
            
        temp411 = self.SsdNC 
        temp412 = temp411.remove 
        temp413 = self.SsdRoleSetCardinality 
        temp414 = temp413(name) 
        temp415 = (name,temp414) 
        temp412(temp415)
        temp416 = self.SsdNC 
        temp417 = temp416.add 
        temp418 = (name,c) 
        temp417(temp418)
        pass 
    def SsdRoleSets(self):
        temp419 = self.SsdNAMES 
        return temp419
    def SsdRoleSetRoles(self, name):
        temp420 = self.SsdNAMES 
        assert name in temp420
        temp421 = [] 
        temp422 = self.SsdNR 
        for (n,r,) in temp422:
            if n == name:
                temp421.append(r)
                
            
        temp423 = temp421 
        temp424 = set(temp423) 
        return temp424
    def SsdRoleSetCardinality(self, name):
        temp425 = self.SsdNAMES 
        assert name in temp425
        temp426 = [] 
        temp427 = self.SsdNC 
        for (n,c,) in temp427:
            if n == name:
                temp426.append(c)
                
            
        temp428 = temp426 
        temp429 = set(temp428) 
        temp430 = temp429.pop 
        temp431 = temp430() 
        return temp431
    def checkDSD(self):
        temp432 = [] 
        temp445 = self.SESSIONS 
        for s in temp445:
            temp444 = self.DsdNC 
            for (name,c,) in temp444:
                temp433 = [] 
                temp436 = [] 
                temp439 = self.ROLES 
                for r in temp439:
                    temp437 = (s,r) 
                    temp438 = self.UR 
                    if temp437 in temp438:
                        temp436.append(r)
                        
                    
                temp440 = temp436 
                for r in set(temp440):
                    temp434 = (name,r) 
                    temp435 = self.DsdNR 
                    if temp434 in temp435:
                        temp433.append(r)
                        
                    
                temp441 = temp433 
                temp442 = set(temp441) 
                temp443 = len(temp442) 
                if temp443 > c:
                    temp432.append(s)
                    
                
            
        temp446 = temp432 
        temp447 = set(temp446) 
        temp448 =  not temp447 
        return temp448
    def checkDSD(self):
        temp432 = [] 
        temp445 = self.SESSIONS 
        for s in temp445:
            temp444 = self.DsdNC 
            for (name,c,) in temp444:
                temp433 = [] 
                temp436 = [] 
                temp439 = self.ROLES 
                for r in temp439:
                    temp437 = (s,r) 
                    temp438 = self.UR 
                    if temp437 in temp438:
                        temp436.append(r)
                        
                    
                temp440 = temp436 
                for r in set(temp440):
                    temp434 = (name,r) 
                    temp435 = self.DsdNR 
                    if temp434 in temp435:
                        temp433.append(r)
                        
                    
                temp441 = temp433 
                temp442 = set(temp441) 
                temp443 = len(temp442) 
                if temp443 > c:
                    temp432.append(s)
                    
                
            
        temp446 = temp432 
        temp447 = set(temp446) 
        temp448 =  not temp447 
        return temp448
    def CreateDsdSet(self, name, roles, c):
        temp449 = self.DsdNAMES 
        assert name not in temp449
        temp450 = roles.issubset 
        temp451 = self.ROLES 
        assert temp450(temp451)
        assert 1 <= c <= len(roles) - 1
        negDsdNR = set() 
        for r in roles:
            temp452 = (name,r) 
            temp453 = self.DsdNR 
            temp459 = temp452 not in temp453 
            if temp459:
                temp454 = self.DsdNR 
                temp455 = temp454.add 
                temp456 = (name,r) 
                temp455(temp456)
                temp457 = negDsdNR.add 
                temp458 = (name,r) 
                temp457(temp458)
                
            
        negDsdNC = set() 
        temp460 = (name,c) 
        temp461 = self.DsdNC 
        temp467 = temp460 not in temp461 
        if temp467:
            temp462 = self.DsdNC 
            temp463 = temp462.add 
            temp464 = (name,c) 
            temp463(temp464)
            temp465 = negDsdNC.add 
            temp466 = (name,c) 
            temp465(temp466)
            
        temp468 = self.checkDSD 
        assert temp468()
        temp469 = self.DsdNAMES 
        temp470 = temp469.add 
        temp470(name)
        
    def DeleteDsdSet(self, name):
        temp471 = self.DsdNAMES 
        assert name in temp471
        temp472 = [] 
        temp474 = self.DsdRoleSetRoles 
        for r in temp474(name):
            temp473 = (name,r) 
            temp473.append(temp473)
            
        temp475 = temp473 
        self.DsdNR -= set(temp475)
        temp476 = self.DsdNC 
        temp477 = temp476.remove 
        temp478 = self.DsdRoleSetCardinality 
        temp479 = temp478(name) 
        temp480 = (name,temp479) 
        temp477(temp480)
        temp481 = self.DsdNAMES 
        temp482 = temp481.remove 
        temp482(name)
        
    def AddDsdRoleMember(self, name, role):
        temp483 = self.DsdNAMES 
        assert name in temp483
        temp484 = self.ROLES 
        assert role in temp484
        temp485 = self.DsdRoleSetRoles 
        temp486 = temp485(name) 
        assert role not in temp486
        temp487 = self.DsdNR 
        temp488 = temp487.add 
        temp489 = (name,role) 
        temp488(temp489)
        temp490 = self.checkDSD 
        assert temp490()
        
    def DeleteDsdRoleMember(self, name, role):
        temp491 = self.DsdNAMES 
        assert name in temp491
        temp492 = self.DsdRoleSetRoles 
        temp493 = temp492(name) 
        assert role in temp493
        temp494 = self.DsdRoleSetCardinality 
        temp498 = temp494(name) 
        temp496 = self.DsdRoleSetRoles 
        temp497 = temp496(name) 
        temp495 = len(temp497) 
        temp499 = temp495 - 2 
        assert temp498 <= temp499
        temp500 = self.DsdNR 
        temp501 = temp500.remove 
        temp502 = (name,role) 
        temp501(temp502)
        
    def SetDsdSetCardinality(self, name, c):
        temp503 = self.DsdNAMES 
        assert name in temp503
        assert 1 <= c <= len(self.DsdRoleSetRoles(name)) - 1
        temp504 = self.DsdNC 
        temp505 = temp504.remove 
        temp506 = self.DsdRoleSetCardinality 
        temp507 = temp506(name) 
        temp508 = (name,temp507) 
        temp505(temp508)
        temp509 = self.DsdNC 
        temp510 = temp509.add 
        temp511 = (name,c) 
        temp510(temp511)
        temp512 = self.checkDSD 
        assert temp512()
        
    def DsdRoleSets(self):
        temp513 = self.DsdNAMES 
        return temp513
    def DsdRoleSetRoles(self, name):
        temp514 = self.DsdNAMES 
        assert name in temp514
        temp515 = [] 
        temp516 = self.DsdNR 
        for (n,r,) in temp516:
            if n == name:
                temp515.append(r)
                
            
        temp517 = temp515 
        temp518 = set(temp517) 
        return temp518
    def DsdRoleSetCardinality(self, name):
        temp519 = self.DsdNAMES 
        assert name in temp519
        temp520 = [] 
        temp521 = self.DsdNC 
        for (n,c,) in temp521:
            if n == name:
                temp520.append(c)
                
            
        temp522 = temp520 
        temp523 = set(temp522) 
        temp524 = temp523.pop 
        temp525 = temp524() 
        return temp525
    
C = coreRBAC() 
temp526 = C.AddUser 
temp526('mickg')
temp527 = C.AddUser 
temp527('zog')
temp528 = C.AddRole 
temp528('Backup Operator')
temp529 = C.AddRole 
temp529('Restore Operator')
temp530 = C.AddRole 
temp530('Grr')
temp531 = C.AddObject 
temp531(3)
temp532 = C.AddObject 
temp532(2)
temp533 = C.AddOperation 
temp533('add')
temp534 = C.AddOperation 
temp534('sub')
temp535 = C.GrantPermission 
temp535('add', 2, 'Restore Operator')
temp536 = C.GrantPermission 
temp536('add', 3, 'Backup Operator')
temp537 = C.GrantPermission 
temp537('add', 3, 'Restore Operator')
temp538 = C.GrantPermission 
temp538('sub', 2, 'Backup Operator')
temp539 = C.AssignUser 
temp539('mickg', 'Backup Operator')
temp540 = C.AssignUser 
temp540('mickg', 'Restore Operator')
temp541 = C.AssignUser 
temp541('zog', 'Restore Operator')
temp542 = C.CreateSession 
temp543 = ['Backup Operator'] 
temp544 = set(temp543) 
temp542('mickg', 'Adder Session', temp544)
temp545 = C.CreateSession 
temp546 = ['Restore Operator'] 
temp547 = set(temp546) 
temp545('zog', 'Restorer Session', temp547)
temp548 = C.CheckAccess 
temp549 = temp548('Adder Session', 'add', 3) 
print temp549
temp550 = C.CheckAccess 
temp551 = temp550('Restorer Session', 'sub', 3) 
print temp551

Computed CFG!
 Slicing...
Adding transition between:
Return(Name('temp448')) Stmt([Assign([AssName('temp432', 'OP_ASSIGN')], List(())), Assign([AssName('temp445', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), For(AssName('s', 'OP_ASSIGN'), Name('temp445'), Stmt([Assign([AssName('temp444', 'OP_ASSIGN')], Getattr(Name('self'), 'DsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp444'), Stmt([Assign([AssName('temp433', 'OP_ASSIGN')], List(())), Assign([AssName('temp436', 'OP_ASSIGN')], List(())), Assign([AssName('temp439', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp439'), Stmt([Assign([AssName('temp437', 'OP_ASSIGN')], Tuple([Name('s'), Name('r')])), Assign([AssName('temp438', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp437'), [('in', Name('temp438'))]), Stmt([Discard(CallFunc(Getattr(Name('temp436'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp440', 'OP_ASSIGN')], Name('temp436')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp440')], None, None), Stmt([Assign([AssName('temp434', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp435', 'OP_ASSIGN')], Getattr(Name('self'), 'DsdNR')), If([(Compare(Name('temp434'), [('in', Name('temp435'))]), Stmt([Discard(CallFunc(Getattr(Name('temp433'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp441', 'OP_ASSIGN')], Name('temp433')), Assign([AssName('temp442', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp441')], None, None)), Assign([AssName('temp443', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp442')], None, None)), If([(Compare(Name('temp443'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp432'), 'append'), [Name('s')], None, None))]))], None)]), None)]), None), Assign([AssName('temp446', 'OP_ASSIGN')], Name('temp432')), Assign([AssName('temp447', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp446')], None, None)), Assign([AssName('temp448', 'OP_ASSIGN')], Not(Name('temp447'))), Return(Name('temp448'))])
AssName('good', 'OP_ASSIGN')
Adding transition between:
Name('self') AssAttr(Name('self'), 'DsdNC', 'OP_ASSIGN')
AssName('C', 'OP_ASSIGN')
Adding transition between:
Name('user') CallFunc(Name('temp122'), [Name('user')], None, None)
Stmt([Assign([AssName('temp200', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp200'))]), None), Assign([AssName('temp201', 'OP_ASSIGN')], List(())), Assign([AssName('temp204', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp204'), Stmt([Assign([AssName('temp202', 'OP_ASSIGN')], Tuple([Name('user'), Name('r')])), Assign([AssName('temp203', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp202'), [('in', Name('temp203'))]), Stmt([Discard(CallFunc(Getattr(Name('temp201'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp205', 'OP_ASSIGN')], Name('temp201')), Assign([AssName('temp206', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp205')], None, None)), Return(Name('temp206'))])
Adding transition between:
Const('Backup Operator') CallFunc(Name('temp536'), [Const('add'), Const(3), Const('Backup Operator')], None, None)
Stmt([Assign([AssName('temp83', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp84', 'OP_ASSIGN')], Compare(Name('operation'), [('in', Name('temp83'))])), Assign([AssName('temp85', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp86', 'OP_ASSIGN')], Compare(Name('object'), [('in', Name('temp85'))])), Assert(And([Name('temp84'), Name('temp86')]), None), Assign([AssName('temp87', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp87'))]), None), Assign([AssName('temp88', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp89', 'OP_ASSIGN')], Tuple([Name('temp88'), Name('role')])), Assign([AssName('temp90', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assert(Compare(Name('temp89'), [('not in', Name('temp90'))]), None), Assign([AssName('temp91', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp92', 'OP_ASSIGN')], Getattr(Name('temp91'), 'add')), Assign([AssName('temp93', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp94', 'OP_ASSIGN')], Tuple([Name('temp93'), Name('role')])), Discard(CallFunc(Name('temp92'), [Name('temp94')], None, None))])
Adding transition between:
Const('add') CallFunc(Name('temp533'), [Const('add')], None, None)
Stmt([Assign([AssName('temp277', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp278', 'OP_ASSIGN')], Getattr(Name('temp277'), 'add')), Discard(CallFunc(Name('temp278'), [Name('operation')], None, None))])
Adding transition between:
Const('Restore Operator') CallFunc(Name('temp540'), [Const('mickg'), Const('Restore Operator')], None, None)
Stmt([Assign([AssName('temp298', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp298'))]), None), Assign([AssName('temp299', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp299'))]), None), Assign([AssName('temp300', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Assign([AssName('temp301', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assert(Compare(Name('temp300'), [('not in', Name('temp301'))]), None), Assign([AssName('temp302', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assign([AssName('temp303', 'OP_ASSIGN')], Getattr(Name('temp302'), 'add')), Assign([AssName('temp304', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Discard(CallFunc(Name('temp303'), [Name('temp304')], None, None)), Assign([AssName('temp305', 'OP_ASSIGN')], Getattr(Name('self'), 'checkSSD')), Discard(CallFunc(Name('temp305'), [], None, None))])
Adding transition between:
Name('temp115') CallFunc(Name('temp115'), [], None, None)
Stmt([Assign([AssName('temp432', 'OP_ASSIGN')], List(())), Assign([AssName('temp445', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), For(AssName('s', 'OP_ASSIGN'), Name('temp445'), Stmt([Assign([AssName('temp444', 'OP_ASSIGN')], Getattr(Name('self'), 'DsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp444'), Stmt([Assign([AssName('temp433', 'OP_ASSIGN')], List(())), Assign([AssName('temp436', 'OP_ASSIGN')], List(())), Assign([AssName('temp439', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp439'), Stmt([Assign([AssName('temp437', 'OP_ASSIGN')], Tuple([Name('s'), Name('r')])), Assign([AssName('temp438', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp437'), [('in', Name('temp438'))]), Stmt([Discard(CallFunc(Getattr(Name('temp436'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp440', 'OP_ASSIGN')], Name('temp436')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp440')], None, None), Stmt([Assign([AssName('temp434', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp435', 'OP_ASSIGN')], Getattr(Name('self'), 'DsdNR')), If([(Compare(Name('temp434'), [('in', Name('temp435'))]), Stmt([Discard(CallFunc(Getattr(Name('temp433'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp441', 'OP_ASSIGN')], Name('temp433')), Assign([AssName('temp442', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp441')], None, None)), Assign([AssName('temp443', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp442')], None, None)), If([(Compare(Name('temp443'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp432'), 'append'), [Name('s')], None, None))]))], None)]), None)]), None), Assign([AssName('temp446', 'OP_ASSIGN')], Name('temp432')), Assign([AssName('temp447', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp446')], None, None)), Assign([AssName('temp448', 'OP_ASSIGN')], Not(Name('temp447'))), Return(Name('temp448'))])
Adding transition between:
Return(Name('temp206')) Stmt([Assign([AssName('temp200', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp200'))]), None), Assign([AssName('temp201', 'OP_ASSIGN')], List(())), Assign([AssName('temp204', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp204'), Stmt([Assign([AssName('temp202', 'OP_ASSIGN')], Tuple([Name('user'), Name('r')])), Assign([AssName('temp203', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp202'), [('in', Name('temp203'))]), Stmt([Discard(CallFunc(Getattr(Name('temp201'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp205', 'OP_ASSIGN')], Name('temp201')), Assign([AssName('temp206', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp205')], None, None)), Return(Name('temp206'))])
AssName('temp123', 'OP_ASSIGN')
Adding transition between:
Const(3) CallFunc(Name('temp548'), [Const('Adder Session'), Const('add'), Const(3)], None, None)
Stmt([Assign([AssName('temp179', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('in', Name('temp179'))]), None), Assign([AssName('temp180', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assert(Compare(Name('operation'), [('in', Name('temp180'))]), None), Assign([AssName('temp181', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assert(Compare(Name('object'), [('in', Name('temp181'))]), None), Assign([AssName('temp182', 'OP_ASSIGN')], List(())), Assign([AssName('temp190', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp190'), Stmt([Assign([AssName('temp183', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Assign([AssName('temp184', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp185', 'OP_ASSIGN')], Compare(Name('temp183'), [('in', Name('temp184'))])), Assign([AssName('temp186', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp187', 'OP_ASSIGN')], Tuple([Name('temp186'), Name('r')])), Assign([AssName('temp188', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp189', 'OP_ASSIGN')], Compare(Name('temp187'), [('in', Name('temp188'))])), If([(And([Name('temp185'), Name('temp189')]), Stmt([Discard(CallFunc(Getattr(Name('temp182'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp191', 'OP_ASSIGN')], Name('temp182')), Assign([AssName('temp192', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp191')], None, None)), Return(Name('temp192'))])
Adding transition between:
Const('Restore Operator') CallFunc(Name('temp537'), [Const('add'), Const(3), Const('Restore Operator')], None, None)
Stmt([Assign([AssName('temp83', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp84', 'OP_ASSIGN')], Compare(Name('operation'), [('in', Name('temp83'))])), Assign([AssName('temp85', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp86', 'OP_ASSIGN')], Compare(Name('object'), [('in', Name('temp85'))])), Assert(And([Name('temp84'), Name('temp86')]), None), Assign([AssName('temp87', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp87'))]), None), Assign([AssName('temp88', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp89', 'OP_ASSIGN')], Tuple([Name('temp88'), Name('role')])), Assign([AssName('temp90', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assert(Compare(Name('temp89'), [('not in', Name('temp90'))]), None), Assign([AssName('temp91', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp92', 'OP_ASSIGN')], Getattr(Name('temp91'), 'add')), Assign([AssName('temp93', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp94', 'OP_ASSIGN')], Tuple([Name('temp93'), Name('role')])), Discard(CallFunc(Name('temp92'), [Name('temp94')], None, None))])
Adding transition between:
Name('OBJ') CallFunc(Name('temp280'), [Name('OBJ')], None, None)
Assign([AssName('temp532', 'OP_ASSIGN')], Getattr(Name('C'), 'AddObject'))
Adding transition between:
Name('OBJ') CallFunc(Name('temp280'), [Name('OBJ')], None, None)
Assign([AssName('temp533', 'OP_ASSIGN')], Getattr(Name('C'), 'AddOperation'))
Adding transition between:
Name('coreRBAC') CallFunc(Name('coreRBAC'), [], None, None)
Stmt([Assign([AssAttr(Name('self'), 'OBJS', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'OPS', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'USERS', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'ROLES', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'PR', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'UR', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SESSIONS', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SU', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SR', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SsdNAMES', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SsdNR', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'SsdNC', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'DsdNAMES', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'DsdNR', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), Assign([AssAttr(Name('self'), 'DsdNC', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None))])
Adding transition between:
Name('temp297') Return(Name('temp297'))
Stmt([Assign([AssName('temp298', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp298'))]), None), Assign([AssName('temp299', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp299'))]), None), Assign([AssName('temp300', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Assign([AssName('temp301', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assert(Compare(Name('temp300'), [('not in', Name('temp301'))]), None), Assign([AssName('temp302', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assign([AssName('temp303', 'OP_ASSIGN')], Getattr(Name('temp302'), 'add')), Assign([AssName('temp304', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Discard(CallFunc(Name('temp303'), [Name('temp304')], None, None)), Assign([AssName('temp305', 'OP_ASSIGN')], Getattr(Name('self'), 'checkSSD')), Discard(CallFunc(Name('temp305'), [], None, None))])
Adding transition between:
Name('temp297') Return(Name('temp297'))
Assign([AssName('temp540', 'OP_ASSIGN')], Getattr(Name('C'), 'AssignUser'))
Adding transition between:
Name('temp297') Return(Name('temp297'))
Assign([AssName('temp542', 'OP_ASSIGN')], Getattr(Name('C'), 'CreateSession'))
Adding transition between:
Name('temp297') Return(Name('temp297'))
Assign([AssName('temp541', 'OP_ASSIGN')], Getattr(Name('C'), 'AssignUser'))
Adding transition between:
Return(Name('temp297')) Stmt([Assign([AssName('temp281', 'OP_ASSIGN')], List(())), Assign([AssName('temp294', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), For(AssName('u', 'OP_ASSIGN'), Name('temp294'), Stmt([Assign([AssName('temp293', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp293'), Stmt([Assign([AssName('temp282', 'OP_ASSIGN')], List(())), Assign([AssName('temp285', 'OP_ASSIGN')], List(())), Assign([AssName('temp288', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp288'), Stmt([Assign([AssName('temp286', 'OP_ASSIGN')], Tuple([Name('u'), Name('r')])), Assign([AssName('temp287', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp286'), [('in', Name('temp287'))]), Stmt([Discard(CallFunc(Getattr(Name('temp285'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp289', 'OP_ASSIGN')], Name('temp285')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp289')], None, None), Stmt([Assign([AssName('temp283', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp284', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNR')), If([(Compare(Name('temp283'), [('in', Name('temp284'))]), Stmt([Discard(CallFunc(Getattr(Name('temp282'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp290', 'OP_ASSIGN')], Name('temp282')), Assign([AssName('temp291', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp290')], None, None)), Assign([AssName('temp292', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp291')], None, None)), If([(Compare(Name('temp292'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp281'), 'append'), [Name('u')], None, None))]))], None)]), None)]), None), Assign([AssName('temp295', 'OP_ASSIGN')], Name('temp281')), Assign([AssName('temp296', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp295')], None, None)), Assign([AssName('temp297', 'OP_ASSIGN')], Not(Name('temp296'))), Return(Name('temp297'))])
Stmt([Assign([AssName('temp298', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp298'))]), None), Assign([AssName('temp299', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp299'))]), None), Assign([AssName('temp300', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Assign([AssName('temp301', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assert(Compare(Name('temp300'), [('not in', Name('temp301'))]), None), Assign([AssName('temp302', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assign([AssName('temp303', 'OP_ASSIGN')], Getattr(Name('temp302'), 'add')), Assign([AssName('temp304', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Discard(CallFunc(Name('temp303'), [Name('temp304')], None, None)), Assign([AssName('temp305', 'OP_ASSIGN')], Getattr(Name('self'), 'checkSSD')), Discard(CallFunc(Name('temp305'), [], None, None))])
Adding transition between:
Return(Name('temp297')) Stmt([Assign([AssName('temp281', 'OP_ASSIGN')], List(())), Assign([AssName('temp294', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), For(AssName('u', 'OP_ASSIGN'), Name('temp294'), Stmt([Assign([AssName('temp293', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp293'), Stmt([Assign([AssName('temp282', 'OP_ASSIGN')], List(())), Assign([AssName('temp285', 'OP_ASSIGN')], List(())), Assign([AssName('temp288', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp288'), Stmt([Assign([AssName('temp286', 'OP_ASSIGN')], Tuple([Name('u'), Name('r')])), Assign([AssName('temp287', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp286'), [('in', Name('temp287'))]), Stmt([Discard(CallFunc(Getattr(Name('temp285'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp289', 'OP_ASSIGN')], Name('temp285')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp289')], None, None), Stmt([Assign([AssName('temp283', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp284', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNR')), If([(Compare(Name('temp283'), [('in', Name('temp284'))]), Stmt([Discard(CallFunc(Getattr(Name('temp282'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp290', 'OP_ASSIGN')], Name('temp282')), Assign([AssName('temp291', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp290')], None, None)), Assign([AssName('temp292', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp291')], None, None)), If([(Compare(Name('temp292'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp281'), 'append'), [Name('u')], None, None))]))], None)]), None)]), None), Assign([AssName('temp295', 'OP_ASSIGN')], Name('temp281')), Assign([AssName('temp296', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp295')], None, None)), Assign([AssName('temp297', 'OP_ASSIGN')], Not(Name('temp296'))), Return(Name('temp297'))])
Assign([AssName('temp542', 'OP_ASSIGN')], Getattr(Name('C'), 'CreateSession'))
Adding transition between:
Return(Name('temp297')) Stmt([Assign([AssName('temp281', 'OP_ASSIGN')], List(())), Assign([AssName('temp294', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), For(AssName('u', 'OP_ASSIGN'), Name('temp294'), Stmt([Assign([AssName('temp293', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp293'), Stmt([Assign([AssName('temp282', 'OP_ASSIGN')], List(())), Assign([AssName('temp285', 'OP_ASSIGN')], List(())), Assign([AssName('temp288', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp288'), Stmt([Assign([AssName('temp286', 'OP_ASSIGN')], Tuple([Name('u'), Name('r')])), Assign([AssName('temp287', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp286'), [('in', Name('temp287'))]), Stmt([Discard(CallFunc(Getattr(Name('temp285'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp289', 'OP_ASSIGN')], Name('temp285')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp289')], None, None), Stmt([Assign([AssName('temp283', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp284', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNR')), If([(Compare(Name('temp283'), [('in', Name('temp284'))]), Stmt([Discard(CallFunc(Getattr(Name('temp282'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp290', 'OP_ASSIGN')], Name('temp282')), Assign([AssName('temp291', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp290')], None, None)), Assign([AssName('temp292', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp291')], None, None)), If([(Compare(Name('temp292'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp281'), 'append'), [Name('u')], None, None))]))], None)]), None)]), None), Assign([AssName('temp295', 'OP_ASSIGN')], Name('temp281')), Assign([AssName('temp296', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp295')], None, None)), Assign([AssName('temp297', 'OP_ASSIGN')], Not(Name('temp296'))), Return(Name('temp297'))])
Assign([AssName('temp541', 'OP_ASSIGN')], Getattr(Name('C'), 'AssignUser'))
Adding transition between:
Return(Name('temp297')) Stmt([Assign([AssName('temp281', 'OP_ASSIGN')], List(())), Assign([AssName('temp294', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), For(AssName('u', 'OP_ASSIGN'), Name('temp294'), Stmt([Assign([AssName('temp293', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp293'), Stmt([Assign([AssName('temp282', 'OP_ASSIGN')], List(())), Assign([AssName('temp285', 'OP_ASSIGN')], List(())), Assign([AssName('temp288', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp288'), Stmt([Assign([AssName('temp286', 'OP_ASSIGN')], Tuple([Name('u'), Name('r')])), Assign([AssName('temp287', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp286'), [('in', Name('temp287'))]), Stmt([Discard(CallFunc(Getattr(Name('temp285'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp289', 'OP_ASSIGN')], Name('temp285')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp289')], None, None), Stmt([Assign([AssName('temp283', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp284', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNR')), If([(Compare(Name('temp283'), [('in', Name('temp284'))]), Stmt([Discard(CallFunc(Getattr(Name('temp282'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp290', 'OP_ASSIGN')], Name('temp282')), Assign([AssName('temp291', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp290')], None, None)), Assign([AssName('temp292', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp291')], None, None)), If([(Compare(Name('temp292'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp281'), 'append'), [Name('u')], None, None))]))], None)]), None)]), None), Assign([AssName('temp295', 'OP_ASSIGN')], Name('temp281')), Assign([AssName('temp296', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp295')], None, None)), Assign([AssName('temp297', 'OP_ASSIGN')], Not(Name('temp296'))), Return(Name('temp297'))])
Assign([AssName('temp540', 'OP_ASSIGN')], Getattr(Name('C'), 'AssignUser'))
Adding transition between:
Const(3) CallFunc(Name('temp531'), [Const(3)], None, None)
Stmt([Assign([AssName('temp279', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp280', 'OP_ASSIGN')], Getattr(Name('temp279'), 'add')), Discard(CallFunc(Name('temp280'), [Name('OBJ')], None, None))])
Adding transition between:
Const('Backup Operator') CallFunc(Name('temp539'), [Const('mickg'), Const('Backup Operator')], None, None)
Stmt([Assign([AssName('temp298', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp298'))]), None), Assign([AssName('temp299', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp299'))]), None), Assign([AssName('temp300', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Assign([AssName('temp301', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assert(Compare(Name('temp300'), [('not in', Name('temp301'))]), None), Assign([AssName('temp302', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assign([AssName('temp303', 'OP_ASSIGN')], Getattr(Name('temp302'), 'add')), Assign([AssName('temp304', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Discard(CallFunc(Name('temp303'), [Name('temp304')], None, None)), Assign([AssName('temp305', 'OP_ASSIGN')], Getattr(Name('self'), 'checkSSD')), Discard(CallFunc(Name('temp305'), [], None, None))])
Adding transition between:
Name('temp448') Return(Name('temp448'))
AssName('good', 'OP_ASSIGN')
Adding transition between:
Return(Name('temp192')) Stmt([Assign([AssName('temp179', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('in', Name('temp179'))]), None), Assign([AssName('temp180', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assert(Compare(Name('operation'), [('in', Name('temp180'))]), None), Assign([AssName('temp181', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assert(Compare(Name('object'), [('in', Name('temp181'))]), None), Assign([AssName('temp182', 'OP_ASSIGN')], List(())), Assign([AssName('temp190', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp190'), Stmt([Assign([AssName('temp183', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Assign([AssName('temp184', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp185', 'OP_ASSIGN')], Compare(Name('temp183'), [('in', Name('temp184'))])), Assign([AssName('temp186', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp187', 'OP_ASSIGN')], Tuple([Name('temp186'), Name('r')])), Assign([AssName('temp188', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp189', 'OP_ASSIGN')], Compare(Name('temp187'), [('in', Name('temp188'))])), If([(And([Name('temp185'), Name('temp189')]), Stmt([Discard(CallFunc(Getattr(Name('temp182'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp191', 'OP_ASSIGN')], Name('temp182')), Assign([AssName('temp192', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp191')], None, None)), Return(Name('temp192'))])
AssName('temp549', 'OP_ASSIGN')
Adding transition between:
Return(Name('temp192')) Stmt([Assign([AssName('temp179', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('in', Name('temp179'))]), None), Assign([AssName('temp180', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assert(Compare(Name('operation'), [('in', Name('temp180'))]), None), Assign([AssName('temp181', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assert(Compare(Name('object'), [('in', Name('temp181'))]), None), Assign([AssName('temp182', 'OP_ASSIGN')], List(())), Assign([AssName('temp190', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp190'), Stmt([Assign([AssName('temp183', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Assign([AssName('temp184', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp185', 'OP_ASSIGN')], Compare(Name('temp183'), [('in', Name('temp184'))])), Assign([AssName('temp186', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp187', 'OP_ASSIGN')], Tuple([Name('temp186'), Name('r')])), Assign([AssName('temp188', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp189', 'OP_ASSIGN')], Compare(Name('temp187'), [('in', Name('temp188'))])), If([(And([Name('temp185'), Name('temp189')]), Stmt([Discard(CallFunc(Getattr(Name('temp182'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp191', 'OP_ASSIGN')], Name('temp182')), Assign([AssName('temp192', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp191')], None, None)), Return(Name('temp192'))])
AssName('temp551', 'OP_ASSIGN')
Adding transition between:
Const('mickg') CallFunc(Name('temp526'), [Const('mickg')], None, None)
Stmt([Assign([AssName('temp19', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('not in', Name('temp19'))]), None), Assign([AssName('temp20', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assign([AssName('temp21', 'OP_ASSIGN')], Getattr(Name('temp20'), 'add')), Discard(CallFunc(Name('temp21'), [Name('user')], None, None))])
Adding transition between:
Const('Grr') CallFunc(Name('temp530'), [Const('Grr')], None, None)
Stmt([Assign([AssName('temp36', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('not in', Name('temp36'))]), None), Assign([AssName('temp37', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assign([AssName('temp38', 'OP_ASSIGN')], Getattr(Name('temp37'), 'add')), Discard(CallFunc(Name('temp38'), [Name('role')], None, None))])
Adding transition between:
Name('temp192') Return(Name('temp192'))
AssName('temp549', 'OP_ASSIGN')
Adding transition between:
Name('temp192') Return(Name('temp192'))
AssName('temp551', 'OP_ASSIGN')
Adding transition between:
Const('sub') CallFunc(Name('temp534'), [Const('sub')], None, None)
Stmt([Assign([AssName('temp277', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp278', 'OP_ASSIGN')], Getattr(Name('temp277'), 'add')), Discard(CallFunc(Name('temp278'), [Name('operation')], None, None))])
Adding transition between:
Name('temp94') CallFunc(Name('temp92'), [Name('temp94')], None, None)
Assign([AssName('temp536', 'OP_ASSIGN')], Getattr(Name('C'), 'GrantPermission'))
Adding transition between:
Name('temp94') CallFunc(Name('temp92'), [Name('temp94')], None, None)
Assign([AssName('temp537', 'OP_ASSIGN')], Getattr(Name('C'), 'GrantPermission'))
Adding transition between:
Name('temp94') CallFunc(Name('temp92'), [Name('temp94')], None, None)
Assign([AssName('temp539', 'OP_ASSIGN')], Getattr(Name('C'), 'AssignUser'))
Adding transition between:
Name('temp94') CallFunc(Name('temp92'), [Name('temp94')], None, None)
Assign([AssName('temp538', 'OP_ASSIGN')], Getattr(Name('C'), 'GrantPermission'))
Adding transition between:
Name('role') CallFunc(Name('temp38'), [Name('role')], None, None)
Assign([AssName('temp529', 'OP_ASSIGN')], Getattr(Name('C'), 'AddRole'))
Adding transition between:
Name('role') CallFunc(Name('temp38'), [Name('role')], None, None)
Assign([AssName('temp530', 'OP_ASSIGN')], Getattr(Name('C'), 'AddRole'))
Adding transition between:
Name('role') CallFunc(Name('temp38'), [Name('role')], None, None)
Assign([AssName('temp531', 'OP_ASSIGN')], Getattr(Name('C'), 'AddObject'))
Adding transition between:
Const('Restore Operator') CallFunc(Name('temp535'), [Const('add'), Const(2), Const('Restore Operator')], None, None)
Stmt([Assign([AssName('temp83', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp84', 'OP_ASSIGN')], Compare(Name('operation'), [('in', Name('temp83'))])), Assign([AssName('temp85', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp86', 'OP_ASSIGN')], Compare(Name('object'), [('in', Name('temp85'))])), Assert(And([Name('temp84'), Name('temp86')]), None), Assign([AssName('temp87', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp87'))]), None), Assign([AssName('temp88', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp89', 'OP_ASSIGN')], Tuple([Name('temp88'), Name('role')])), Assign([AssName('temp90', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assert(Compare(Name('temp89'), [('not in', Name('temp90'))]), None), Assign([AssName('temp91', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp92', 'OP_ASSIGN')], Getattr(Name('temp91'), 'add')), Assign([AssName('temp93', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp94', 'OP_ASSIGN')], Tuple([Name('temp93'), Name('role')])), Discard(CallFunc(Name('temp92'), [Name('temp94')], None, None))])
Adding transition between:
Const('Backup Operator') CallFunc(Name('temp528'), [Const('Backup Operator')], None, None)
Stmt([Assign([AssName('temp36', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('not in', Name('temp36'))]), None), Assign([AssName('temp37', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assign([AssName('temp38', 'OP_ASSIGN')], Getattr(Name('temp37'), 'add')), Discard(CallFunc(Name('temp38'), [Name('role')], None, None))])
Adding transition between:
Name('operation') CallFunc(Name('temp278'), [Name('operation')], None, None)
Assign([AssName('temp534', 'OP_ASSIGN')], Getattr(Name('C'), 'AddOperation'))
Adding transition between:
Name('operation') CallFunc(Name('temp278'), [Name('operation')], None, None)
Assign([AssName('temp535', 'OP_ASSIGN')], Getattr(Name('C'), 'GrantPermission'))
Adding transition between:
Const('Restore Operator') CallFunc(Name('temp529'), [Const('Restore Operator')], None, None)
Stmt([Assign([AssName('temp36', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('not in', Name('temp36'))]), None), Assign([AssName('temp37', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assign([AssName('temp38', 'OP_ASSIGN')], Getattr(Name('temp37'), 'add')), Discard(CallFunc(Name('temp38'), [Name('role')], None, None))])
Adding transition between:
Const('Restore Operator') CallFunc(Name('temp541'), [Const('zog'), Const('Restore Operator')], None, None)
Stmt([Assign([AssName('temp298', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp298'))]), None), Assign([AssName('temp299', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp299'))]), None), Assign([AssName('temp300', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Assign([AssName('temp301', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assert(Compare(Name('temp300'), [('not in', Name('temp301'))]), None), Assign([AssName('temp302', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), Assign([AssName('temp303', 'OP_ASSIGN')], Getattr(Name('temp302'), 'add')), Assign([AssName('temp304', 'OP_ASSIGN')], Tuple([Name('user'), Name('role')])), Discard(CallFunc(Name('temp303'), [Name('temp304')], None, None)), Assign([AssName('temp305', 'OP_ASSIGN')], Getattr(Name('self'), 'checkSSD')), Discard(CallFunc(Name('temp305'), [], None, None))])
Adding transition between:
Name('session') CallFunc(Name('temp131'), [Name('session')], None, None)
Assign([AssName('temp545', 'OP_ASSIGN')], Getattr(Name('C'), 'CreateSession'))
Adding transition between:
Name('session') CallFunc(Name('temp131'), [Name('session')], None, None)
Assign([AssName('temp548', 'OP_ASSIGN')], Getattr(Name('C'), 'CheckAccess'))
Adding transition between:
Name('temp547') CallFunc(Name('temp545'), [Const('zog'), Const('Restorer Session'), Name('temp547')], None, None)
Stmt([Assign([AssName('added', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), For(AssName('role', 'OP_ASSIGN'), Name('ars'), Stmt([Assign([AssName('temp107', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Assign([AssName('temp108', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp114', 'OP_ASSIGN')], Compare(Name('temp107'), [('not in', Name('temp108'))])), If([(Name('temp114'), Stmt([Assign([AssName('temp109', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp110', 'OP_ASSIGN')], Getattr(Name('temp109'), 'add')), Assign([AssName('temp111', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Discard(CallFunc(Name('temp110'), [Name('temp111')], None, None)), Assign([AssName('temp112', 'OP_ASSIGN')], Getattr(Name('added'), 'add')), Assign([AssName('temp113', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Discard(CallFunc(Name('temp112'), [Name('temp113')], None, None))]))], None)]), None), Assign([AssName('temp115', 'OP_ASSIGN')], Getattr(Name('self'), 'checkDSD')), Assign([AssName('good', 'OP_ASSIGN')], CallFunc(Name('temp115'), [], None, None)), For(AssName('k', 'OP_ASSIGN'), Name('added'), Stmt([Assign([AssName('temp116', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp117', 'OP_ASSIGN')], Getattr(Name('temp116'), 'remove')), Assign([AssName('temp118', 'OP_ASSIGN')], Tuple([Subscript(Name('k'), 'OP_APPLY', [Const(0)]), Subscript(Name('k'), 'OP_APPLY', [Const(1)])])), Discard(CallFunc(Name('temp117'), [Name('temp118')], None, None))]), None), Assert(Name('good'), None), Assign([AssName('temp119', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp119'))]), None), Assign([AssName('temp120', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('not in', Name('temp120'))]), None), Assign([AssName('temp121', 'OP_ASSIGN')], Getattr(Name('ars'), 'issubset')), Assign([AssName('temp122', 'OP_ASSIGN')], Getattr(Name('self'), 'AssignedRoles')), Assign([AssName('temp123', 'OP_ASSIGN')], CallFunc(Name('temp122'), [Name('user')], None, None)), Assert(CallFunc(Name('temp121'), [Name('temp123')], None, None), None), Assign([AssName('temp124', 'OP_ASSIGN')], Getattr(Name('self'), 'SU')), Assign([AssName('temp125', 'OP_ASSIGN')], Getattr(Name('temp124'), 'add')), Assign([AssName('temp126', 'OP_ASSIGN')], Tuple([Name('session'), Name('user')])), Discard(CallFunc(Name('temp125'), [Name('temp126')], None, None)), For(AssName('r', 'OP_ASSIGN'), Name('ars'), Stmt([Assign([AssName('temp127', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp128', 'OP_ASSIGN')], Getattr(Name('temp127'), 'add')), Assign([AssName('temp129', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Discard(CallFunc(Name('temp128'), [Name('temp129')], None, None))]), None), Assign([AssName('temp130', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assign([AssName('temp131', 'OP_ASSIGN')], Getattr(Name('temp130'), 'add')), Discard(CallFunc(Name('temp131'), [Name('session')], None, None))])
Adding transition between:
Const(3) CallFunc(Name('temp550'), [Const('Restorer Session'), Const('sub'), Const(3)], None, None)
Stmt([Assign([AssName('temp179', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('in', Name('temp179'))]), None), Assign([AssName('temp180', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assert(Compare(Name('operation'), [('in', Name('temp180'))]), None), Assign([AssName('temp181', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assert(Compare(Name('object'), [('in', Name('temp181'))]), None), Assign([AssName('temp182', 'OP_ASSIGN')], List(())), Assign([AssName('temp190', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp190'), Stmt([Assign([AssName('temp183', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Assign([AssName('temp184', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp185', 'OP_ASSIGN')], Compare(Name('temp183'), [('in', Name('temp184'))])), Assign([AssName('temp186', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp187', 'OP_ASSIGN')], Tuple([Name('temp186'), Name('r')])), Assign([AssName('temp188', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp189', 'OP_ASSIGN')], Compare(Name('temp187'), [('in', Name('temp188'))])), If([(And([Name('temp185'), Name('temp189')]), Stmt([Discard(CallFunc(Getattr(Name('temp182'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp191', 'OP_ASSIGN')], Name('temp182')), Assign([AssName('temp192', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp191')], None, None)), Return(Name('temp192'))])
Adding transition between:
Name('temp206') Return(Name('temp206'))
AssName('temp123', 'OP_ASSIGN')
Adding transition between:
Name('temp305') CallFunc(Name('temp305'), [], None, None)
Stmt([Assign([AssName('temp281', 'OP_ASSIGN')], List(())), Assign([AssName('temp294', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), For(AssName('u', 'OP_ASSIGN'), Name('temp294'), Stmt([Assign([AssName('temp293', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNC')), For(AssTuple([AssName('name', 'OP_ASSIGN'), AssName('c', 'OP_ASSIGN')]), Name('temp293'), Stmt([Assign([AssName('temp282', 'OP_ASSIGN')], List(())), Assign([AssName('temp285', 'OP_ASSIGN')], List(())), Assign([AssName('temp288', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), For(AssName('r', 'OP_ASSIGN'), Name('temp288'), Stmt([Assign([AssName('temp286', 'OP_ASSIGN')], Tuple([Name('u'), Name('r')])), Assign([AssName('temp287', 'OP_ASSIGN')], Getattr(Name('self'), 'UR')), If([(Compare(Name('temp286'), [('in', Name('temp287'))]), Stmt([Discard(CallFunc(Getattr(Name('temp285'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp289', 'OP_ASSIGN')], Name('temp285')), For(AssName('r', 'OP_ASSIGN'), CallFunc(Name('set'), [Name('temp289')], None, None), Stmt([Assign([AssName('temp283', 'OP_ASSIGN')], Tuple([Name('name'), Name('r')])), Assign([AssName('temp284', 'OP_ASSIGN')], Getattr(Name('self'), 'SsdNR')), If([(Compare(Name('temp283'), [('in', Name('temp284'))]), Stmt([Discard(CallFunc(Getattr(Name('temp282'), 'append'), [Name('r')], None, None))]))], None)]), None), Assign([AssName('temp290', 'OP_ASSIGN')], Name('temp282')), Assign([AssName('temp291', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp290')], None, None)), Assign([AssName('temp292', 'OP_ASSIGN')], CallFunc(Name('len'), [Name('temp291')], None, None)), If([(Compare(Name('temp292'), [('>', Name('c'))]), Stmt([Discard(CallFunc(Getattr(Name('temp281'), 'append'), [Name('u')], None, None))]))], None)]), None)]), None), Assign([AssName('temp295', 'OP_ASSIGN')], Name('temp281')), Assign([AssName('temp296', 'OP_ASSIGN')], CallFunc(Name('set'), [Name('temp295')], None, None)), Assign([AssName('temp297', 'OP_ASSIGN')], Not(Name('temp296'))), Return(Name('temp297'))])
Adding transition between:
Const(2) CallFunc(Name('temp532'), [Const(2)], None, None)
Stmt([Assign([AssName('temp279', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp280', 'OP_ASSIGN')], Getattr(Name('temp279'), 'add')), Discard(CallFunc(Name('temp280'), [Name('OBJ')], None, None))])
Adding transition between:
Const('Backup Operator') CallFunc(Name('temp538'), [Const('sub'), Const(2), Const('Backup Operator')], None, None)
Stmt([Assign([AssName('temp83', 'OP_ASSIGN')], Getattr(Name('self'), 'OPS')), Assign([AssName('temp84', 'OP_ASSIGN')], Compare(Name('operation'), [('in', Name('temp83'))])), Assign([AssName('temp85', 'OP_ASSIGN')], Getattr(Name('self'), 'OBJS')), Assign([AssName('temp86', 'OP_ASSIGN')], Compare(Name('object'), [('in', Name('temp85'))])), Assert(And([Name('temp84'), Name('temp86')]), None), Assign([AssName('temp87', 'OP_ASSIGN')], Getattr(Name('self'), 'ROLES')), Assert(Compare(Name('role'), [('in', Name('temp87'))]), None), Assign([AssName('temp88', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp89', 'OP_ASSIGN')], Tuple([Name('temp88'), Name('role')])), Assign([AssName('temp90', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assert(Compare(Name('temp89'), [('not in', Name('temp90'))]), None), Assign([AssName('temp91', 'OP_ASSIGN')], Getattr(Name('self'), 'PR')), Assign([AssName('temp92', 'OP_ASSIGN')], Getattr(Name('temp91'), 'add')), Assign([AssName('temp93', 'OP_ASSIGN')], Tuple([Name('operation'), Name('object')])), Assign([AssName('temp94', 'OP_ASSIGN')], Tuple([Name('temp93'), Name('role')])), Discard(CallFunc(Name('temp92'), [Name('temp94')], None, None))])
Adding transition between:
Name('user') CallFunc(Name('temp21'), [Name('user')], None, None)
Assign([AssName('temp527', 'OP_ASSIGN')], Getattr(Name('C'), 'AddUser'))
Adding transition between:
Name('user') CallFunc(Name('temp21'), [Name('user')], None, None)
Assign([AssName('temp528', 'OP_ASSIGN')], Getattr(Name('C'), 'AddRole'))
Adding transition between:
Const('zog') CallFunc(Name('temp527'), [Const('zog')], None, None)
Stmt([Assign([AssName('temp19', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('not in', Name('temp19'))]), None), Assign([AssName('temp20', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assign([AssName('temp21', 'OP_ASSIGN')], Getattr(Name('temp20'), 'add')), Discard(CallFunc(Name('temp21'), [Name('user')], None, None))])
Adding transition between:
Name('temp544') CallFunc(Name('temp542'), [Const('mickg'), Const('Adder Session'), Name('temp544')], None, None)
Stmt([Assign([AssName('added', 'OP_ASSIGN')], CallFunc(Name('set'), [], None, None)), For(AssName('role', 'OP_ASSIGN'), Name('ars'), Stmt([Assign([AssName('temp107', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Assign([AssName('temp108', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp114', 'OP_ASSIGN')], Compare(Name('temp107'), [('not in', Name('temp108'))])), If([(Name('temp114'), Stmt([Assign([AssName('temp109', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp110', 'OP_ASSIGN')], Getattr(Name('temp109'), 'add')), Assign([AssName('temp111', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Discard(CallFunc(Name('temp110'), [Name('temp111')], None, None)), Assign([AssName('temp112', 'OP_ASSIGN')], Getattr(Name('added'), 'add')), Assign([AssName('temp113', 'OP_ASSIGN')], Tuple([Name('session'), Name('role')])), Discard(CallFunc(Name('temp112'), [Name('temp113')], None, None))]))], None)]), None), Assign([AssName('temp115', 'OP_ASSIGN')], Getattr(Name('self'), 'checkDSD')), Assign([AssName('good', 'OP_ASSIGN')], CallFunc(Name('temp115'), [], None, None)), For(AssName('k', 'OP_ASSIGN'), Name('added'), Stmt([Assign([AssName('temp116', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp117', 'OP_ASSIGN')], Getattr(Name('temp116'), 'remove')), Assign([AssName('temp118', 'OP_ASSIGN')], Tuple([Subscript(Name('k'), 'OP_APPLY', [Const(0)]), Subscript(Name('k'), 'OP_APPLY', [Const(1)])])), Discard(CallFunc(Name('temp117'), [Name('temp118')], None, None))]), None), Assert(Name('good'), None), Assign([AssName('temp119', 'OP_ASSIGN')], Getattr(Name('self'), 'USERS')), Assert(Compare(Name('user'), [('in', Name('temp119'))]), None), Assign([AssName('temp120', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assert(Compare(Name('session'), [('not in', Name('temp120'))]), None), Assign([AssName('temp121', 'OP_ASSIGN')], Getattr(Name('ars'), 'issubset')), Assign([AssName('temp122', 'OP_ASSIGN')], Getattr(Name('self'), 'AssignedRoles')), Assign([AssName('temp123', 'OP_ASSIGN')], CallFunc(Name('temp122'), [Name('user')], None, None)), Assert(CallFunc(Name('temp121'), [Name('temp123')], None, None), None), Assign([AssName('temp124', 'OP_ASSIGN')], Getattr(Name('self'), 'SU')), Assign([AssName('temp125', 'OP_ASSIGN')], Getattr(Name('temp124'), 'add')), Assign([AssName('temp126', 'OP_ASSIGN')], Tuple([Name('session'), Name('user')])), Discard(CallFunc(Name('temp125'), [Name('temp126')], None, None)), For(AssName('r', 'OP_ASSIGN'), Name('ars'), Stmt([Assign([AssName('temp127', 'OP_ASSIGN')], Getattr(Name('self'), 'SR')), Assign([AssName('temp128', 'OP_ASSIGN')], Getattr(Name('temp127'), 'add')), Assign([AssName('temp129', 'OP_ASSIGN')], Tuple([Name('session'), Name('r')])), Discard(CallFunc(Name('temp128'), [Name('temp129')], None, None))]), None), Assign([AssName('temp130', 'OP_ASSIGN')], Getattr(Name('self'), 'SESSIONS')), Assign([AssName('temp131', 'OP_ASSIGN')], Getattr(Name('temp130'), 'add')), Discard(CallFunc(Name('temp131'), [Name('session')], None, None))])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp548'), [Const('Adder Session'), Const('add'), Const(3)], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp110'), [Name('temp111')], None, None) set([Name('temp109')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp540'), [Const('mickg'), Const('Restore Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp303'), [Name('temp304')], None, None) set([Name('temp302')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp305'), [], None, None) set([Name('self')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp539'), [Const('mickg'), Const('Backup Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp528'), [Const('Backup Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp115'), [], None, None) set([Name('self'), Name('self')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp537'), [Const('add'), Const(3), Const('Restore Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp530'), [Const('Grr')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp117'), [Name('temp118')], None, None) set([Name('temp116')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp278'), [Name('operation')], None, None) set([Name('temp277')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp545'), [Const('zog'), Const('Restorer Session'), Name('temp547')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp280'), [Name('OBJ')], None, None) set([Name('temp279')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp112'), [Name('temp113')], None, None) set([Name('added')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp536'), [Const('add'), Const(3), Const('Backup Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp531'), [Const(3)], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp541'), [Const('zog'), Const('Restore Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp121'), [Name('temp123')], None, None) set([Name('ars')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp131'), [Name('session')], None, None) set([Name('temp130')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp526'), [Const('mickg')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp538'), [Const('sub'), Const(2), Const('Backup Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp534'), [Const('sub')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp125'), [Name('temp126')], None, None) set([Name('temp124')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp529'), [Const('Restore Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp533'), [Const('add')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp92'), [Name('temp94')], None, None) set([Name('temp91')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp535'), [Const('add'), Const(2), Const('Restore Operator')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp550'), [Const('Restorer Session'), Const('sub'), Const(3)], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp527'), [Const('zog')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp128'), [Name('temp129')], None, None) set([Name('temp127')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp122'), [Name('user')], None, None) set([Name('self')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp542'), [Const('mickg'), Const('Adder Session'), Name('temp544')], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp532'), [Const(2)], None, None) set([Name('C')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp38'), [Name('role')], None, None) set([Name('temp37')])
>> HandleCallFunc in selfsearch in FixpointSelfSearch >> Added self! CallFunc(Name('temp21'), [Name('user')], None, None) set([Name('temp20')])
Building initial workset!
set([])
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Node : self.SESSIONS = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94), 'RBAC2.coreRBAC.__init__.self#SESSIONS'), ((56, 60, 74, 79, 84, 89, 94), 99))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp94 = (temp93,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 'RBAC2.coreRBAC.GrantPermission.temp94'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 554))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1080), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1080), 679))
Node : temp296 = set(temp295)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp296'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 1038))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1326))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1459))
Node : temp291 = set(temp290)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 912), 'RBAC2.coreRBAC.checkSSD.temp291'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 912), 940))
Node : temp543 = ['Backup Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.temp543'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 1097))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 1326))
Node : temp291 = set(temp290)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp291'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 940))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466), 1482))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466), 1482))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1279))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1459))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 1459))
Node : temp93 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 'RBAC2.coreRBAC.GrantPermission.temp93'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 549))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1215))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1218))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1215))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp113 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1170), 'RBAC2.coreRBAC.CreateSession.temp113'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1170), 1178))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1326))
Node : self.DsdNR = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129), 'RBAC2.coreRBAC.__init__.self#DsdNR'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129), 134))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1279))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1326))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1302))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp543 = ['Backup Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.temp543'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 1097))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1215))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1529))
Node : temp291 = set(temp290)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp291'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 940))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 700))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1215))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1218))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 700))
Node : self.OPS = set()   , subid:0
     (((56, 60), 'RBAC2.coreRBAC.__init__.self#OPS'), ((56, 60), 74))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : C = coreRBAC()   , subid:0
     (((), 'RBAC2.C'), ((), 56))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp89 = (temp88,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 'RBAC2.coreRBAC.GrantPermission.temp89'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 508))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1326))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1302))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1229))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125), 1132))
Node : temp283 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912), 'RBAC2.coreRBAC.checkSSD.temp283'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912), 918))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1525))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1215))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1279))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1525))
Node : temp94 = (temp93,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 'RBAC2.coreRBAC.GrantPermission.temp94'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 554))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp94 = (temp93,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 'RBAC2.coreRBAC.GrantPermission.temp94'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 554))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1215))
Node : self.DsdNC = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134), 'RBAC2.coreRBAC.__init__.self#DsdNC'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134), 139))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1437))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 1502))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp432 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp432'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1194))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp281 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp281'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 715))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : self.SsdNAMES = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109), 'RBAC2.coreRBAC.__init__.self#SsdNAMES'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109), 114))
Node : temp286 = (u,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp286'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 850))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1326))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp544 = set(temp543)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.temp544'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 1121))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp544 = set(temp543)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.temp544'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 1121))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1426))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1302))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1302))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 1482))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1088), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1088), 700))
Node : temp89 = (temp88,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 'RBAC2.coreRBAC.GrantPermission.temp89'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 508))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251), 1279))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1218))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1279))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1257))
Node : temp432 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp432'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1194))
Node : temp282 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp282'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 836))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 1426))
Node : temp107 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp107'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132), 1140))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1080), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1080), 700))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 1502))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251), 1257))
Node : temp113 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1170), 'RBAC2.coreRBAC.CreateSession.temp113'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1170), 1178))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1229))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : self.UR = set()   , subid:0
     (((56, 60, 74, 79, 84, 89), 'RBAC2.coreRBAC.__init__.self#UR'), ((56, 60, 74, 79, 84, 89), 94))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : self.DsdNAMES = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124), 'RBAC2.coreRBAC.__init__.self#DsdNAMES'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124), 129))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1218))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 679))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp93 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 'RBAC2.coreRBAC.GrantPermission.temp93'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 549))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1302))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1229))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 1437))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp282 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp282'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 836))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251), 1257))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1218))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp94 = (temp93,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 'RBAC2.coreRBAC.GrantPermission.temp94'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 554))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1279))
Node : temp107 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp107'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132), 1140))
Node : temp93 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 'RBAC2.coreRBAC.GrantPermission.temp93'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 549))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1279))
Node : temp432 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp432'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1194))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1279))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657), 679))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1279))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1080), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1080), 679))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1229))
Node : temp286 = (u,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp286'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 850))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1426))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1229))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1279))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp93 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 'RBAC2.coreRBAC.GrantPermission.temp93'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 549))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : temp111 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp111'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132), 1166))
Node : self.SR = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104), 'RBAC2.coreRBAC.__init__.self#SR'), ((56, 60, 74, 79, 84, 89, 94, 99, 104), 109))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp89 = (temp88,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 'RBAC2.coreRBAC.GrantPermission.temp89'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 508))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1218))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1426))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486), 1502))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : self.USERS = set()   , subid:0
     (((56, 60, 74), 'RBAC2.coreRBAC.__init__.self#USERS'), ((56, 60, 74), 79))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 1326))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 1502))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 1326))
Node : temp282 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp282'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 836))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1459))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 1482))
Node : temp543 = ['Backup Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.temp543'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 1097))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1302))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp283 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 912), 'RBAC2.coreRBAC.checkSSD.temp283'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 912), 918))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 1459))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1585))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : temp285 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp285'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 839))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1088), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1088), 700))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1326))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1257))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1326))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1088), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1088), 679))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1080), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1080), 700))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1302))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1229))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125), 1132))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp88 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 'RBAC2.coreRBAC.GrantPermission.temp88'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 630), 454))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1437))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190), 1326))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 1437))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1426))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125), 1132))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1437))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1600))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp285 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp285'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 839))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1437))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413), 1426))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp113 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1170), 'RBAC2.coreRBAC.CreateSession.temp113'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1170), 1178))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1529))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1215))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1088), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1088), 700))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1279))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1088), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1088), 679))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 1326))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251), 1257))
Node : self.SU = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99), 'RBAC2.coreRBAC.__init__.self#SU'), ((56, 60, 74, 79, 84, 89, 94, 99), 104))
Node : temp291 = set(temp290)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912), 'RBAC2.coreRBAC.checkSSD.temp291'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912), 940))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 679))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1459))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1326))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1080), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1080), 679))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 1502))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 1482))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1426))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : self.OBJS = set()   , subid:0
     (((56,), 'RBAC2.coreRBAC.__init__.self#OBJS'), ((56,), 60))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1459))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1574))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466), 1482))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : self.PR = set()   , subid:0
     (((56, 60, 74, 79, 84), 'RBAC2.coreRBAC.__init__.self#PR'), ((56, 60, 74, 79, 84), 89))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1229))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 679))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1525))
Node : temp291 = set(temp290)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp291'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 940))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1506), 1502))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1383), 1326))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1437))
Node : temp182 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp182'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1574))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1632))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1215))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517), 1529))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486), 1502))
Node : temp433 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp433'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1215))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1383), 1326))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657), 700))
Node : temp547 = set(temp546)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp547'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1529))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1279))
Node : temp296 = set(temp295)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp296'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 1038))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 700))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 1437))
Node : temp111 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp111'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132), 1166))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1632))
Node : self.ROLES = set()   , subid:0
     (((56, 60, 74, 79), 'RBAC2.coreRBAC.__init__.self#ROLES'), ((56, 60, 74, 79), 84))
Node : self.SsdNR = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114), 'RBAC2.coreRBAC.__init__.self#SsdNR'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114), 119))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284), 1302))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1383), 1326))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251), 1279))
Node : temp447 = set(temp446)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp447'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1302))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1459))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1600))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp186 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp186'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1600))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413), 1426))
Node : temp304 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1080), 'RBAC2.coreRBAC.AssignUser.temp304'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1080), 700))
Node : temp544 = set(temp543)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.temp544'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 1121))
Node : added = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 'RBAC2.coreRBAC.CreateSession.added'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1529, 1533), 1132))
Node : temp286 = (u,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 'RBAC2.coreRBAC.checkSSD.temp286'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711), 850))
Node : temp89 = (temp88,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 'RBAC2.coreRBAC.GrantPermission.temp89'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 508))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1218))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp129 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 'RBAC2.coreRBAC.CreateSession.temp129'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1506), 1502))
Node : temp201 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp201'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413), 1426))
Node : self.SsdNC = set()   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119), 'RBAC2.coreRBAC.__init__.self#SsdNC'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119), 124))
Node : temp296 = set(temp295)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp296'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945), 1038))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251), 1279))
Node : temp300 = (user,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1088), 'RBAC2.coreRBAC.AssignUser.temp300'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1088), 679))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543), 1605))
Node : temp88 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 'RBAC2.coreRBAC.GrantPermission.temp88'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416), 454))
Node : temp183 = (session,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp183'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1585))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1218))
Node : temp111 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp111'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132), 1166))
Node : temp88 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 'RBAC2.coreRBAC.GrantPermission.temp88'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 648), 454))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp434 = (name,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 'RBAC2.coreRBAC.checkDSD.temp434'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1251), 1257))
Node : temp546 = ['Restore Operator']   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 'RBAC2.temp546'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517), 1525))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284), 1229))
Node : temp437 = (s,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 'RBAC2.coreRBAC.checkDSD.temp437'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284), 1229))
Node : temp442 = set(temp441)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp442'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190), 1279))
Node : temp436 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 'RBAC2.coreRBAC.checkDSD.temp436'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190), 1218))
Node : temp285 = []   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 'RBAC2.coreRBAC.checkSSD.temp285'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945), 839))
Node : temp202 = (user,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp202'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1279, 1284, 1413), 1437))
Node : temp206 = set(temp205)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 'RBAC2.coreRBAC.AssignedRoles.temp206'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 1121, 1125, 1132, 1190, 1413), 1459))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1383), 1326))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp192 = set(temp191)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp192'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1632))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 1482))
Node : temp107 = (session,role)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132), 'RBAC2.coreRBAC.CreateSession.temp107'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132), 1140))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1251, 1279, 1284, 1413, 1466), 1482))
Node : temp88 = (operation,object)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 'RBAC2.coreRBAC.GrantPermission.temp88'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 639), 454))
Node : temp126 = (session,user)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 'RBAC2.coreRBAC.CreateSession.temp126'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466), 1482))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1413, 1466, 1486, 1517, 1543, 1914), 1605))
Node : temp118 = (k[0],k[1])   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1383), 'RBAC2.coreRBAC.CreateSession.temp118'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 940, 945, 1121, 1125, 1132, 1190, 1383), 1326))
Node : temp187 = (temp186,r)   , subid:0
     (((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 'RBAC2.coreRBAC.CheckAccess.temp187'), ((56, 60, 74, 79, 84, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 148, 168, 246, 266, 287, 299, 390, 402, 416, 558, 657, 704, 711, 912, 940, 945, 1121, 1125, 1132, 1190, 1279, 1284, 1413, 1466, 1486, 1517, 1543), 1605))
Running workset!
Items added to alias graph: 2892450
Distinct contexts:          241
Distinct variables:         72
Distinct locations:         55
